# Generated by Django 5.0.7 on 2025-09-15 13:46

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Counties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geomjson', models.CharField(max_length=255)),
                ('statename', models.CharField(max_length=255)),
                ('stusps', models.CharField(max_length=10)),
                ('county', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'counties_json',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DownloadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('affiliation', models.CharField(choices=[('', ''), ('Community Member', 'Community Member'), ('Student', 'Student'), ('Industry', 'Industry'), ('Nonprofit', 'Nonprofit'), ('Government', 'Government'), ('Other', 'Other')], max_length=50)),
                ('state', models.CharField(choices=[('', ''), ('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('DC', 'District of Columbia'), ('Other', 'International')], max_length=50)),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('download_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': '"portals"."wells_downloads"',
                'ordering': ['-download_date'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geomjson', models.CharField(max_length=255)),
                ('statename', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'states_json',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='stStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('well_status', models.CharField(max_length=50)),
                ('stusps', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'wellstatus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='stType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('well_type', models.CharField(max_length=50)),
                ('stusps', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'welltype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Wells',
            fields=[
                ('api_num', models.CharField(blank=True, max_length=50, null=True)),
                ('other_id', models.CharField(blank=True, max_length=50, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('stusps', models.CharField(blank=True, max_length=50, null=True)),
                ('county', models.CharField(blank=True, max_length=50, null=True)),
                ('municipality', models.CharField(blank=True, max_length=50, null=True)),
                ('well_name', models.CharField(blank=True, max_length=50, null=True)),
                ('operator', models.CharField(blank=True, max_length=50, null=True)),
                ('spud_date', models.CharField(blank=True, max_length=50, null=True)),
                ('plug_date', models.CharField(blank=True, max_length=50, null=True)),
                ('well_type', models.CharField(blank=True, max_length=50, null=True)),
                ('well_status', models.CharField(blank=True, max_length=50, null=True)),
                ('well_configuration', models.CharField(blank=True, max_length=50, null=True)),
                ('ft_category', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': '"wells"."wells"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CSVRequestLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('ip_address', models.GenericIPAddressField()),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DownloadRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('ip_address', models.GenericIPAddressField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
    ]
